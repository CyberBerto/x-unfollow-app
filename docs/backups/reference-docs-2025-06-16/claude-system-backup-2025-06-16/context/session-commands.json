{
  "session_command_system": {
    "version": "1.0",
    "description": "Functional session commands that create files and perform real actions",
    "principle": "Commands should perform actual file operations and updates, not just conversational responses"
  },
  "commands": {
    "consol": {
      "trigger": "consol",
      "status": "implemented",
      "action": "Create timestamped consolidation file",
      "file_location": "docs/progress/p-mini-consolidations/",
      "naming_format": "YYYY-MM-DD-HH-MM-[topic]-[type].md",
      "content_types": {
        "mini": "Brief focused consolidations throughout day",
        "consolidation": "Comprehensive end-of-day or major work sessions"
      },
      "decision_criteria": {
        "mini": "Small features, bug fixes, minor enhancements", 
        "full": "Major implementations, architecture changes, analysis work"
      },
      "file_template": {
        "header": "# Mini Consolidation - YYYY-MM-DD-HH-MM",
        "sections": [
          "## Quick Status Update",
          "## Current Accomplishments", 
          "## Next Priorities",
          "## Blocking Issues",
          "## Notes"
        ]
      },
      "auto_actions": [
        "Generate timestamp",
        "Determine consolidation type (mini vs full)",
        "Create file with accomplishments and next steps",
        "Update project context automatically"
      ]
    },
    "go": {
      "trigger": "GO",
      "status": "implemented",
      "action": "Load context and display current state",
      "auto_actions": [
        "Read current-session.json for project state",
        "Read layer-status.json for layer progress", 
        "Display current layer focus and priorities",
        "Show immediate next steps",
        "Load relevant context for current work"
      ],
      "display_format": {
        "project_status": "Current layer, progress percentage",
        "immediate_priorities": "Top 3 tasks for this session",
        "context_summary": "Key files, functions, and implementation points",
        "ready_indicator": "Confirmation that context is loaded and ready"
      }
    },
    "end_sesh": {
      "trigger": "end sesh",
      "status": "needs_implementation", 
      "action": "Create comprehensive session log and update documentation",
      "auto_actions": [
        "Create session log in docs/progress/p-session-logs/",
        "Update technical documentation with changes made",
        "Update layer status if significant progress",
        "Create comprehensive consolidation file",
        "Update context files with session outcomes",
        "Archive any temporary files created during session"
      ],
      "file_outputs": [
        "docs/progress/session-logs/YYYY-MM-DD-session-log.md",
        "docs/technical/daily-logs/YYYY-MM-DD-code-changes.md (if code changes)",
        "docs/progress/mini-consolidations/YYYY-MM-DD-HH-MM-session-consolidation.md"
      ]
    },
    "clean_vault": {
      "trigger": "clean vault",
      "status": "needs_implementation",
      "action": "Organize files and clean directory structure",
      "auto_actions": [
        "Move misplaced files to correct docs folders",
        "Archive outdated files to docs/z-archive/",
        "Organize loose files in main directory", 
        "Clean up temporary or duplicate files",
        "Update file organization documentation",
        "Verify all reference files are in correct locations"
      ],
      "target_areas": [
        "Main project directory (keep only essential app files)",
        "docs/ folder structure (ensure proper categorization)",
        "Archive old versions and outdated files",
        "Consolidate duplicate documentation"
      ]
    },
    "prep_next_session": {
      "trigger": "prep next session", 
      "status": "needs_implementation",
      "action": "Update context files and set priorities for next session",
      "auto_actions": [
        "Update current-session.json with next session priorities",
        "Update layer-status.json with current progress",
        "Create/update Next-Session-Immediate-Start.md",
        "Identify and document any blocking issues",
        "Set clear entry point for next session",
        "Archive completed work and clean up loose ends"
      ],
      "preparation_areas": [
        "Context file updates",
        "Priority task identification", 
        "Blocking issue documentation",
        "Entry point specification",
        "Resource preparation"
      ]
    }
  },
  "new_commands": {
    "end_day": {
      "trigger": "end day",
      "status": "needs_implementation",
      "action": "Create comprehensive daily progress recount",
      "file_location": "docs/progress/p-daily-logs/",
      "auto_actions": [
        "Get current date",
        "Scan ALL current day files from ALL progress and technical folders",
        "Create comprehensive daily summary",
        "Update daily progress tracking"
      ]
    },
    "code": {
      "trigger": "code", 
      "status": "needs_implementation",
      "action": "Create quick code change log",
      "file_location": "docs/technical/t-mini-changes/",
      "auto_actions": [
        "Get current timestamp",
        "Reference current day's previous t-mini files",
        "Log file changes and function modifications"
      ]
    },
    "end_code": {
      "trigger": "end code",
      "status": "needs_implementation", 
      "action": "Create session-level code change summary",
      "file_location": "docs/technical/t-session-changes/",
      "auto_actions": [
        "Get current timestamp",
        "Scan current day files from t-mini-changes and p-mini-consolidations",
        "Create technical implementation summary"
      ]
    },
    "end_tech": {
      "trigger": "end tech",
      "status": "needs_implementation",
      "action": "Create comprehensive daily technical recount", 
      "file_location": "docs/technical/t-daily-logs/",
      "auto_actions": [
        "Get current date",
        "Scan ALL current day files from ALL technical and progress folders",
        "Create complete technical architecture summary"
      ]
    }
  },
  "implementation_priority": [
    "GO (highest - immediate session value)",
    "consol (implemented)",
    "end sesh (high - session completion)",
    "end day (high - daily completion)",
    "code (medium - technical tracking)",
    "end code (medium - technical session)",
    "end tech (medium - technical daily)",
    "clean vault (low - organizational value)", 
    "prep next session (low - productivity value)"
  ],
  "automation_principles": {
    "file_creation": "All commands should create actual files, not just text responses",
    "context_updates": "Commands should automatically update relevant context files",
    "organization": "Commands should maintain project organization standards",
    "efficiency": "Commands should save brain cycles and provide real automation value"
  }
}